{"version":3,"sources":["Components/Coursers.js","Components/AddCourses.js","App.js","reportWebVitals.js","index.js"],"names":["Coursers","props","ToggleState","setState","edit","state","submitEdit","e","preventDefault","input","value","alert","editCourse","index","swal","UpdateVlaue","required","ref","v","defaultValue","data","name","className","type","onClick","showCourses","handlDelet","this","Component","AddCourses","onSubmit","handlsubmit","current","onChange","updatCourse","App","courses","event","target","push","splice","course","courseList","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3daaa2fd.chunk.js","sourcesContent":["import './Courses.css'\r\nimport React, { Component , Fragment } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport default class Coursers extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      edit:true\r\n\r\n    }\r\n\r\n  }\r\n\r\n  ToggleState = () =>{\r\n    this.setState({edit:!this.state.edit})\r\n  }\r\n\r\n\r\n  submitEdit = (e) =>{\r\n    e.preventDefault();\r\n    if(this.input.value === \"\"){\r\n      alert('input vide')\r\n    }else{\r\n      this.props.editCourse(this.props.index,this.input.value)\r\n      this.ToggleState();\r\n      swal('Good Job' , 'your course is updated with success' , 'success')\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  UpdateVlaue = ()=>{\r\n        return(\r\n          <form >\r\n            <input required ref={(v)=>{this.input = v}} defaultValue={this.props.data.name} className=\"course-udated\" type=\"text\"/>\r\n            <input onClick={this.submitEdit} type='submit' className=\"btn-update\" value=\"update\"/>\r\n          </form>\r\n    \r\n        )\r\n  }\r\n\r\n  showCourses = () =>{\r\n    return(\r\n      <ul>\r\n          <li className=\"course-name\" ><h3>{this.props.data.name}</h3></li>\r\n          <li><i onClick={this.ToggleState} className=\"edit fa fa-edit\"></i></li>\r\n          <li><i onClick={()=>{this.props.handlDelet(this.props.index)}} className=\"delet fa fa-times\"></i></li>\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.state.edit?this.showCourses():this.UpdateVlaue()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// import React, {Fragment,useState} from 'react';\r\n\r\n// export default function Coursers(props) {\r\n//   const submitEdit = (e) =>{\r\n//     e.preventDefault();\r\n//     props.editCourse(props.index)\r\n//     ToggleState();\r\n\r\n//   }\r\n\r\n \r\n\r\n//   const ToggleState=()=>{\r\n//     setIdit(!edit)\r\n//   }\r\n\r\n//   const [edit,setIdit] =useState(true)\r\n//   const UpdateVlaue = ()=>{\r\n//     return(\r\n//       <form onClick={submitEdit}>\r\n//         <input defaultValue={props.data.name} className=\"course-udated\" type=\"text\"/>\r\n//         <input type='submit' className=\"btn-update\" value=\"update\"/>\r\n//       </form>\r\n\r\n//     )\r\n//   }\r\n\r\n//   let showCourses = () =>{\r\n//     return(\r\n//       <ul>\r\n//           <li className=\"course-name\" ><h3>{props.data.name}</h3></li>\r\n//           <li><i onClick={ToggleState} className=\"edit fa fa-edit\"></i></li>\r\n//           <li><i onClick={()=>{props.handlDelet(props.index)}} className=\"delet fa fa-times\"></i></li>\r\n//       </ul>\r\n//     )\r\n//   }\r\n  \r\n//   return (\r\n//       <Fragment>\r\n\r\n//         {edit?showCourses():UpdateVlaue()}\r\n        \r\n//       </Fragment>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './AddCourses.css'\r\n\r\nexport default function AddCourses(props) {\r\n  return (\r\n    <div>\r\n        <form onSubmit={props.handlsubmit}>\r\n            <input  className=\"course-input\" value={props.current}  type=\"text\" onChange={props.updatCourse} required/>\r\n            <input type=\"submit\" value=\"Add Courses\" />\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport Coursers from './Components/Coursers';\nimport 'font-awesome/css/font-awesome.min.css'\nimport AddCourses from './Components/AddCourses';\nimport './App.css'\nimport swal from 'sweetalert';\nimport \"animate.css\"\n\n\n\nclass App extends Component {\n  state = {\n    courses : [\n      {name: 'reactjs'},\n      {name: 'angular'},\n      {name: 'laravel'},\n\n      \n    ],\n\n    current: ''\n    \n  }\n\n\n  // update courses \n  updatCourse = (event)=>{\n    this.setState({\n      current:event.target.value\n    })\n  }\n\n  // add course\n\n  handlsubmit = (event) =>{\n    event.preventDefault();\n    let current = this.state.current;\n    let courses = this.state.courses;\n    courses.push({name:current});\n    this.setState({\n      courses,\n      current: ''\n    })\n    swal(\"Good job!\" , \"your course is added with succes\" , \"success\")\n  }\n\n  // delet courses\n\n  handlDelet = (index) =>{\n    let courses = [...this.state.courses];\n    courses.splice(index,1);\n    this.setState({courses})\n  }\n\n  // edit course\n\n  editCourse = (index,value) =>{\n    const courses = this.state.courses;\n    let course = courses[index];\n    course[\"name\"] = value;\n    this.setState({course})\n  }\n\n  \n  \n\n  render() {\n    const {courses} = this.state;\n    const courseList = courses.map((course,index)=>{\n      return <Coursers editCourse={this.editCourse} data={course} index={index} handlDelet={this.handlDelet}  key={index}/>\n    })\n    return (\n      <div className=\"App\">\n        <h1 className=\"animate__animated animate__flip\">crud app</h1>\n        <AddCourses current={this.state.current} handlsubmit={this.handlsubmit} updatCourse ={this.updatCourse}/>\n        {courseList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}